version: '3.9'

services:
  frontend:
    image: notacat1/frontend:latest
    container_name: frontend
    ports:
      - '${FRONTEND_PORT:-3000}:${FRONTEND_PORT:-3000}'
    restart: unless-stopped
    networks:
      - isolated_network
    deploy:
      resources:
        limits:
          cpus: '${FRONTEND_CPU_LIMIT:-0.5}'
          memory: '${FRONTEND_MEM_LIMIT:-512M}'

  backend:
    image: notacat1/backend:latest
    container_name: backend
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=${JWT_EXPIRATION}
      - BCRYPT_SALT_ROUNDS=${BCRYPT_SALT_ROUNDS}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - BACKEND_PORT=${BACKEND_PORT}
    ports:
      - '${BACKEND_PORT:-5000}:5000'
    restart: unless-stopped
    networks:
      - isolated_network
    depends_on:
      - db
    deploy:
      resources:
        limits:
          cpus: '${BACKEND_CPU_LIMIT:-1.0}'
          memory: '${BACKEND_MEM_LIMIT:-1024M}'

  db:
    image: postgres:17
    container_name: db
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - '${DB_PORT:-5432}:5432'
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - isolated_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '${DB_CPU_LIMIT:-0.5}'
          memory: '${DB_MEM_LIMIT:-512M}'

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    ports:
        - '${NGINX_PORT:-80}:${NGINX_PORT:-80}'
        - "443:443"
    volumes:
        - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
        - ./nginx/ssl:/etc/nginx/ssl:ro
        - ./nginx/cache:/var/cache/nginx
        - ./nginx/logs:/var/log/nginx
        - /etc/letsencrypt:/etc/letsencrypt
    networks:
        - isolated_network
    depends_on:
        - backend
        - frontend

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: unless-stopped
    ports:
      - '${PGADMIN_PORT:-8080}:80'
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL:-admin@admin.com}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD:-admin}
    depends_on:
      - db
    networks:
      - isolated_network

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    ports:
      - '${PROMETHEUS_PORT:-9090}:9090'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - isolated_network

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    ports:
      - '${GRAFANA_PORT:-3001}:${GRAFANA_PORT:-3001}'
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    networks:
      - isolated_network

networks:
  isolated_network:
    driver: bridge

volumes:
  pg_data:
